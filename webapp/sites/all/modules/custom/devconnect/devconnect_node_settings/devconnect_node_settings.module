<?php
/**
 * Implements hook_menu().
 */
function devconnect_node_settings_menu() {
  $items = array();
  $items['admin/content/node_settings'] = array(
    'title' => 'Node Form settings',
    'description' => 'Adjust the node forms.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_node_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['api/get_api_class/%'] = array(
    'page callback' => 'devconnect_node_settings_get_api_classes',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_enable().
 */
function devconnect_node_settings_enable() {
  db_query("UPDATE {system} SET weight = 1001 WHERE name = 'devconnect_node_settings'");
}

/**
 * Constructor for admin form displaying all the all the default fields with check box.
 * Submit Function: admin_node_settings_form_submit.
 */
function admin_node_settings_form() {

  $node_types = _node_types();
  foreach ($node_types as $nt) {
    $res = db_select('node_settings', 'n')
      ->fields('n', array('fields', 'display_status'))
      ->condition('node_type', $nt, '=')
      ->execute();
    while ($disp_field = $res->fetchObject()) {
      if ($disp_field->display_status == 1) {
        $field_array[$disp_field->fields] = $disp_field->fields;
      }
      else {
        $field_array[$disp_field->fields] = 0;
      }
    }
    $fields_array = array(
      'menu' => 'Menu',
      'body' => 'Body Field',
      'revision_information' => 'Revision Information',
      'comment_settings' => 'Comment Settings',
      'author' => 'Author Information',
      'options' => 'Publish Options',
      'field_tags' => 'Tags',
      'field_image' => 'Image'
    );
    $form[$nt . '_fields'] = array(
      '#type' => 'fieldset',
      '#title' => $nt,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    $form[$nt . '_fields'][$nt . '_values'] = array(
      '#type' => 'checkboxes',
      '#title' => t(ucfirst($nt) . ' Fields'),
      '#default_value' => isset($field_array) ? $field_array : array(),
      '#options' => $fields_array,
      '#description' => t('Check the fields which you want to show in the node form.'),
    );
  }
  $form['submit'] = array('#type' => 'submit', '#value' => 'Save settings');
  return $form;
}

/**
 * Submit function for admin_node_settings_form.
 */
function admin_node_settings_form_submit(&$form, $form_state) {
  $node_types = _node_types();
  if ($form_state['values']['submit'] == "Save settings") {
    db_query("TRUNCATE TABLE {node_settings}");
    foreach ($node_types as $nt) {
      foreach ($form_state['values'][$nt . '_values'] as $key => $val) {
        if ($val != '0') {
          $val = 1;
        }
        $data = array(
          'node_type' => $nt,
          'fields' => $key,
          'display_status' => $val,
        );
        drupal_write_record('node_settings', $data);
      }
    }
  }
}

/**
 * Gets all the content types that are available in the site.
 * @todo: use _node_types_build() instead
 */
function _node_types() {
  $result = db_select('node_type', 'n')
    ->fields('n', array('type'))
    ->execute();
  while ($type = $result->fetchAssoc()) {
    $node_types[] = $type['type'];
  }
  return $node_types;
}

/**
 * Implementation of hook_form_alter().
 */
function devconnect_node_settings_form_alter(&$form, $form_state, $form_id) {
  global $conf;
  $node_types = _node_types();
  foreach ($node_types as $nt) {
    if ($form_id == $nt . '_node_form') {
      $res = db_select('node_settings', 'n')
        ->fields('n', array('fields'))
        ->condition('node_type', $nt, '=')
        ->condition('display_status', '0', '=')
        ->execute();
      while ($disp_field = $res->fetchObject()) {
        unset($form[$disp_field->fields]);
      }
    }
  }
  if ($form_id == 'api_method_node_form') {
    drupal_add_js('jQuery(document).ready(function () {get_class_names(jQuery("#edit-field-api-und").val()) });', 'inline');
    drupal_add_js('function get_class_names(api_name) {
						jQuery("#edit-field-class-name-und >option").remove();
						jQuery("#test-spinner2").show();
						jQuery.ajax({           
												type: "get",
								        url: "' . base_path() . 'api/get_api_class/"+api_name,
								        dataType: "json",
								   			success: function(data) { 
								                 jQuery("#edit-field-class-name-und >option").html("");
								                 jQuery.each(data, function(i, val) {
								                     jQuery("<option value=\""+i+"\">"+val+"</option>").appendTo("#edit-field-class-name-und");
								                 });
								                 jQuery("#test-spinner2").hide();  
				}
				})}', 'inline');
    if ($conf['theme_default'] == 'aloha_minimal') {
      drupal_add_js('jQuery(document).ready(function () {jQuery(\'#edit-field-class-name\').hide();});', 'inline');
    }
    else {
      $form['#after_build'][] = '_devconnect_node_settings_apiclass_select';
    }
  }
}

/**
 * Page callback to get all the API class names on change of APIs in create API Method Form.
 */
function devconnect_node_settings_get_api_classes() {
  $api = (int) arg(2);
  $result = db_query("SELECT DISTINCT(node.nid) AS nid,
		                     node.title AS node_title,
		                     node.sticky AS node_sticky,
		                     node_data_field_api.entity_id As entity_id,
		                     node.changed AS node_changed
		                     FROM node node
		                     LEFT JOIN field_data_field_api node_data_field_api ON node.vid = node_data_field_api.entity_id
		                     WHERE node.type = 'class_name' AND node_data_field_api.field_api_nid = :nid
		                     GROUP BY nid
		                     ORDER BY node_sticky DESC, node_title ASC, node_changed DESC", array(':nid' => $api));
  while ($row = $result->fetchAssoc()) {
    $res[$row['nid']] = check_plain($row['node_title']);
  }
  drupal_json_output(array_unique($res));
  exit;
}

/**
 * after_build callback registered by devconect_node_setings_form_alter().
 *
 * @param $form
 * @param $form_state
 * @return mixed
 */
function _devconnect_node_settings_apiclass_select($form, &$form_state) {
  $form['field_api']['und']['#attributes']['onchange'] = 'get_class_names(this.value)';
  $form['field_api']['und']['#suffix'] = '<div id="test-spinner2" style="float:right;height:30px;display:none;padding:20px 850px 0px 0px;" ><img src="' . base_path() . drupal_get_path('module', 'devconnect_node_settings') . '/images/spinner.gif' . '"></div>';
  return $form;
}  
