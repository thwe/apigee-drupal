<?xml version="1.0"?>
<project name="apigee-drupal-project" default="apigee-drupal" description="Apigee Drupal Build">
	
	<!--
	
	Two types of builds: internal and external build. Internal builds are those who have access to the apigee/drupal-settings repo.
	External builds are those who do not. Default is an external build. Internal builds will have ${build.type} = internal
	in their Jenkins default properties.
	
	-->
	
	<property name="build.type" value="external" override="false" />
	
	<target name='init'>
		<echo>-------------------------------------------------</echo>
		<echo> => cloning latest drupal settings </echo>
		<echo>-------------------------------------------------</echo>
		<delete dir="../drupal-settings" quiet="true" />
		<delete dir="../tasks" quiet="true" />
		<mkdir dir="tasks" />
		<gitclone repository="http://git.drupal.org/project/phingdrushtask.git" targetPath="../tasks/drush" />
		<gitbranch repository="../tasks/drush" branchname="7.x-1.x" />
		<if>
			<equals arg1="${build.type}" arg2="internal" />
			<then>
				<gitclone repository="git@github.com:apigee/drupal-settings" targetPath="../drupal-settings" />
			</then>
		</if>
		
	</target>
	<target name="apigee-drupal">
		<echo>-------------------------------------------------</echo>
		<echo> +++++ Running Phing/Drush build </echo>
		<echo>-------------------------------------------------</echo>
		<phingcall target="init" />
		<includepath classpath="../tasks" />
		<taskdef name="drush" classname="drush.DrushTask" />
		<drush command="cc">
			<param>drush</param>
		</drush>
	    <drush command="make" assume="yes">
			<option name="prepare-install" />
			<option name="working-copy" />
			<option name="no-gitinfofile" />
			<option name="no-cache" />
			<option name="force-complete" />
			<param>apigee.make</param>
		</drush>
		<if>
			<equals arg1="${build.type}" arg2="internal" />
			<then>
				<copy todir="sites" >
				  <fileset dir="../drupal-settings/sites">
				    <include name="**/**" />
				  </fileset>
				</copy>
			</then>
		</if>
	</target>
	<target name="dc-local-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<exec command="drush @dc-local updatedb -y" />
		<exec command="drush @dc-local cc all -y" />
	</target>
	<target name="dc-dev-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<move file="/disk2/www/devconnect-dev.apigee.com/webapp" todir="/tmp/build-scraps-${BUILD_ID}" includeemptydirs="true" />
		<copy todir="/disk2/www/devconnect-dev.apigee.com/webapp">
			<fileset dir="../webapp">
			    <include name="**/**" />
			</fileset>
		</copy>
		<exec command="drush @dc-dev updatedb -y" />
		<exec command="drush @dc-dev cc all -y" />
	</target>
	<target name="dc-dit-build">
		<tar destination="build-${BUILD_ID}.tbz" 
			basedir="/disk2/www/devconnect-dev.apigee.com/webapp" 
			compression="bzip2"
			includeemptydirs="true"
			/>
		<scp username="webupload"
			privkeyfile="/var/lib/jenkins/.ssh/id_rsa_webupload"
			host="ddm00apigee"
			todir="/tmp"
			file="build-${BUILD_ID}.tbz" />
		<drush command="cc">
			<param>drush</param>
		</drush>
		<exec command="drush @dc-dit updatedb -y" />
		<exec command="drush @dc-dit cc all -y" />
	</target>
	<target name="dc-stage-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<exec command="drush @dc-stage updatedb -y" />
		<exec command="drush @dc-stage cc all -y" />
	</target>
	<target name="dc-prod-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<exec command="drush @dc-stage updatedb -y" />
		<exec command="drush @dc-stage cc all -y" />
	</target>
	<target name="docs-dev-build">
		<move file="/disk2/www/v4docs-dev.apigee.com/docs" 
			todir="/tmp/build-scraps-${BUILD_ID}" 
			includeemptydirs="true" />
		<drush command="cc">
			<param>drush</param>
		</drush>
		<copy todir="/disk2/www/v4docs-dev.apigee.com/docs">
			<fileset dir="../webapp">
			    <include name="**/**" />
			</fileset>
		</copy>
		<exec command="drush @docs-dev updatedb -y" />
		<exec command="drush @docs-dev cc all -y" />
	</target>
	<target name='copy-drush'>
		<copy todir="${user.home}/.drush" overwrite="true" >
			<fileset dir="../drupal-settings/drush">
				<include name="*.aliases.drushrc.php" />
			</fileset>
		</copy>
	</target>
	<target name="mktg-dev-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<copy todir="/disk2/www/mktg-dev.apigee.com/about">
			<fileset dir="../webapp">
			    <include name="**/**" />
			</fileset>
		</copy>
		<exec command="drush @mktg-dev updatedb -y" />
		<exec command="drush @mktg-dev cc all -y" />
	</target>
	<target name="blog-dev-build">
		<drush command="cc">
			<param>drush</param>
		</drush>
		<copy todir="/disk2/www/blog-dev.apigee.com">
			<fileset dir="../webapp">
			    <include name="**/**" />
			</fileset>
		</copy>
		<exec command="drush @mktg-dev updatedb -y" />
		<exec command="drush @mktg-dev cc all -y" />
	</target>
</project>
